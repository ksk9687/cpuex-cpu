RS232C解説

RS232Cについて
	RS232Cポートにはピンがいっぱい伸びているけど、通信に使うのはたった2本の線(送信線と受信線)
	他のピンは制御線だが、仕様が曖昧なところがあり、使用はお勧めできない
	むしろたった2本の線で通信できるのがRS232Cのすごいところなので、これだけで通信しましょう
	
ストレートとクロス
	もともとRS232CはPCとモデムの間をつなぐのに使われていた
		そのときは、普通にPCから送信する線をモデム側が受信して、モデムが、PCが受信できるように受信線に送信すればよかった(ストレートケーブル)
	これを、PC間、あるいは他の機器と接続するとき、そのまま接続すると、受信線と受信線・送信線と送信線がつながってしまう
	そこで、受信線と相手の送信線をつなぐようにしたものを、クロスケーブルという
	これだけ聞くと当たり前に見えるが、制御線の定義を各メーカーが解釈したときに、クロスケーブルの仕様がメーカー間で多少違いが出てきてしまった。これが制御線を使うのをお勧めできない理由のひとつ。
	
	ちなみに筆者(xyx)は、Model Sim上でストレートケーブルでモジュールをつなげてしまうというミスをして、数時間ぐらいはまっていたことがあるので、皆さんは注意しましょうｗ。(out と outをつないだら警告してよModelSimさん)

通信速度
	当初の規格では、かなりの低速通信用として開発されたため、baud rate(本当は違うが、通信速度と同義と見てよい)は、110bps(bit/s) -- 9600bpsで策定された。
	これが、ある程度時間がたつと、遅すぎるということで14400bps,28800bpsが使われるようになり、
	さらに時間がたって、115200bpsが策定され、
	最終的に、Windowsなどで、その倍倍である、230400bps,460800bps,921600bpsが策定される。
	
	学科PCや筆者(xyx)のPCの後ろについているシリアルポートは、多分115200bpsが上限(デバイスドライバ見てください)
		それ以上の速さでは本来プログラムで開けないはずなんだが、TeraTermでは何をしているのか知らないが、それ以上の速度で通信できているように見える。(多分実際にはその速度でやり取りしていないのでしょう。)
	入江先生の貸してくれたシリアル2USBを使うと、送信は921600bpsまでいけて、受信は460800bpsまでいける。
	最も性能の高いシリアル2USBを使うと921600bps≒1Mbpsまで出せるという噂もある。
	ちなみに、921600bpsでcontest.sldを実行すると、IOだけで0.5sかかります。
	
	FPGA基板の方が圧倒的に性能が高いため、たとえ921600bpsでも余裕で受信できる。(数十--数百クロックかかる)
	
	ちなみに、USB2.0なら、旧基板でももはやシリアルの速度が無視できるぐらい速い(旧基板でも概算で50Mbps)
	
信号の規格
	以下のように信号と電圧が対応している。
		0:+12V
		1:-12V
	拡張基板上に作成する場合は自分で電圧調整のチップを挟む必要があったが、
	新基板ではFPGAのピンが電圧調整の石をはさんでソケットにつながっているため、何も考えずに0,1を出力すればよい

通信の仕組み
	受信と送信の原理は同じ
	
	以下のようにデータが流れてくる。
		通常時'1'
		データを送りたいとき:スタートビット('0'が1bit),データビット(7--8bit),パリティビット(0--1bit),ストップビット('1'が1or2bit)の順で流れる
	パリティを使用するかどうかやストップビット・データビットをいくつにするかはbaud rateと同じように、プログラムでポートを開く際に決められるので、好きなものにするとよい(cserver参照)
	通常、データビットは8bit(当たり前),パリティは使わない、ストップビットは1or2bit
	
	送信線と受信線だけを使うとread側が待てないので、自動的にバッファを作る仕様になります。
	
モジュールの書き方:
	受信するとき:
		まずスタートピットを検出する
		数クロック待って、まだスタートビットだったらデータを受信開始
		適当に待ってデータを採取
		データを取得し終わったら、しばらくストップビットを待って、全てストップビットが終わる前に、最初の状態に戻る
			これをしないと、最後に余計なデータを読んでしまうことがあります。
	
	1bitにかける長さは、受信側で少し本来の値より長く、送信側で少し短くするといい場合があります。
	
	一応、ノイズも想定して、前後数クロックを使用してデータを採取した方がいいでしょう。
	
その他
	よくbitのエンディアンがよくわからなくなるので、変なことになったらいろいろと調整してみてください。
	基板に何も書き込んでいない状態では、受信線と送信線が結線しているので、エコーしてきます。これでそもそもPC側のシリアルポートがその速さで生きているか実験するといいでしょう。
